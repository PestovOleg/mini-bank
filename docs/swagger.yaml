basePath: /api/v1
definitions:
  account.AccountCreateRequest:
    properties:
      currency:
        enum:
        - "810"
        - "840"
        example: "810"
        type: string
      name:
        example: Удачный
        type: string
    required:
    - currency
    - name
    type: object
  account.AccountUpdateRequest:
    properties:
      interest_rate:
        example: 0.125
        type: number
      name:
        example: Удачный
        type: string
    required:
    - name
    type: object
  account.ChangeBalanceRequest:
    properties:
      amount:
        example: 9999.99
        type: number
    required:
    - amount
    type: object
  backend_services_auth_internal_http_handler_v1_auth.AuthCreateRequest:
    properties:
      password:
        example: mypass
        type: string
      username:
        example: Ivanec
        type: string
    required:
    - password
    - username
    type: object
  mapper.Account:
    properties:
      account:
        example: "40817810902007654321"
        type: string
      amount:
        example: 99999.99
        type: number
      created_at:
        example: "2023-09-19T10:58:00.000Z"
        type: string
      currency:
        example: "810"
        type: string
      id:
        example: fdee7aae-f79f-4653-8a16-9207e6805b93
        type: string
      interest_rate:
        example: 0.125
        type: number
      is_active:
        example: true
        type: boolean
      name:
        example: Удачный
        type: string
      updated_at:
        example: "2023-09-19T10:58:00.000Z"
        type: string
      user_id:
        example: fdee7aae-f79f-4653-8a16-9207e6805b93
        type: string
    type: object
  mapper.ToggleList:
    properties:
      features:
        items:
          properties:
            description:
              example: Create User Toggle
              type: string
            environments:
              items:
                properties:
                  enabled:
                    example: true
                    type: boolean
                  name:
                    example: development
                    type: string
                  type:
                    example: development
                    type: string
                type: object
              type: array
            name:
              example: CreateUserToggle
              type: string
          type: object
        type: array
      version:
        example: 2
        type: integer
    type: object
  mapper.User:
    properties:
      birthday:
        example: 01.01.1999
        type: string
      created_at:
        example: 01.01.1999
        type: string
      email:
        example: Ivanych@gmail.com
        type: string
      id:
        example: fdee7aae-f79f-4653-8a16-9207e6805b93
        type: string
      last_name:
        example: Ivanov
        type: string
      name:
        example: Ivan
        type: string
      patronymic:
        example: Ivanych
        type: string
      phone:
        example: +7(495)999-99-99
        type: string
      updated_at:
        example: 01.01.1999
        type: string
    type: object
  mgmt.MgmtCreateUserRequest:
    properties:
      birthday:
        example: 02.01.2006
        type: string
      email:
        example: Ivanych@gmail.com
        type: string
      last_name:
        example: Ivanov
        type: string
      name:
        example: Ivan
        type: string
      password:
        example: mypass
        type: string
      patronymic:
        example: Ivanych
        type: string
      phone:
        example: +7(495)999-99-99
        type: string
      username:
        example: Ivanec
        type: string
    required:
    - birthday
    - email
    - last_name
    - name
    - password
    - patronymic
    - phone
    - username
    type: object
  user.UserCreateRequest:
    properties:
      birthday:
        example: 02.01.2006
        type: string
      email:
        example: Ivanych@gmail.com
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      last_name:
        example: Ivanov
        type: string
      name:
        example: Ivan
        type: string
      patronymic:
        example: Ivanych
        type: string
      phone:
        example: +7(495)999-99-99
        type: string
    required:
    - birthday
    - email
    - id
    - last_name
    - name
    - patronymic
    - phone
    type: object
  user.UserUpdateRequest:
    properties:
      email:
        example: Ivanych@gmail.com
        type: string
      phone:
        example: +7(495)999-99-99
        type: string
    required:
    - email
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: minibank.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: minibank
  version: "1.0"
paths:
  /account-minibank-health:
    get:
      description: Returns the server's health status.
      responses:
        "200":
          description: Service is healthy - Hello from Health Check Handler Endpoint"
            "StatusOK
          schema:
            type: string
        "500":
          description: StatusInternalError
          schema:
            type: string
      summary: Check the health status of the server
      tags:
      - account-minibank
  /auth:
    post:
      consumes:
      - application/json
      description: Create a new authentication record using the provided details.
      parameters:
      - description: Authentication details for creation
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/backend_services_auth_internal_http_handler_v1_auth.AuthCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'A new authentication record has been created with ID: {id}'
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new authentication record (inter-service interaction)
      tags:
      - auth-minibank
  /auth-minibank-health:
    get:
      description: Returns the server's health status.
      responses:
        "200":
          description: Service is healthy - Hello from Health Check Handler Endpoint"
            "StatusOK
          schema:
            type: string
        "500":
          description: StatusInternalError
          schema:
            type: string
      summary: Check the health status of the auth server
      tags:
      - auth-minibank
  /auth/{id}:
    delete:
      consumes:
      - application/json
      description: Deactivate the authentication record using the provided user ID.
      parameters:
      - description: Auth ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted authentication record
          schema:
            type: string
        "404":
          description: Page not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Deactivate authentication record based on the provided ID.
      tags:
      - auth-minibank
  /auth/login:
    post:
      consumes:
      - application/json
      description: Get User ID with credentials.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved User ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Authenticate User with credentials.
      tags:
      - auth-minibank
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Authorize User with token.
      produces:
      - application/json
      responses:
        "200":
          description: Authorized
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Authorize User with token.
      tags:
      - auth-minibank
  /mgmt:
    post:
      consumes:
      - application/json
      description: Create a new user using the provided details
      parameters:
      - description: User details for creation
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/mgmt.MgmtCreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'A new user has been created with ID: {id}'
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Orchestrate creation of a new user with services auth and user
      tags:
      - mgmt
  /mgmt-minibank-health:
    get:
      description: Returns the server's health status.
      responses:
        "200":
          description: Mgmt Service is healthy - Hello from Health Check Handler Endpoint"
            "StatusOK
          schema:
            type: string
        "500":
          description: StatusInternalError
          schema:
            type: string
      summary: Check the health status of the server
      tags:
      - mgmt
  /mgmt/{id}:
    delete:
      consumes:
      - application/json
      description: Delete(deactivate) a  user using the provided details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The user has been deactivated
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Orchestrate deactivation of a  user with services auth, user and account
      tags:
      - mgmt
  /uproxy:
    get:
      consumes:
      - application/json
      description: Unleash Proxy for Web
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved feature toggles
          schema:
            $ref: '#/definitions/mapper.ToggleList'
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Unleash Proxy for Web
      tags:
      - uProxy
  /uproxy-minibank-health:
    get:
      description: Returns the server's health status.
      responses:
        "200":
          description: Unleash Proxy Service is healthy - Hello from Health Check
            Handler Endpoint" "StatusOK
          schema:
            type: string
        "500":
          description: StatusInternalError
          schema:
            type: string
      summary: Check the health status of the server
      tags:
      - uProxy
  /user-minibank-health:
    get:
      description: Returns the server's health status.
      responses:
        "200":
          description: User Service is healthy - Hello from Health Check Handler Endpoint"
            "StatusOK
          schema:
            type: string
        "500":
          description: StatusInternalError
          schema:
            type: string
      summary: Check the health status of the server
      tags:
      - user-minibank
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user using the provided details (inter-service interaction)
      parameters:
      - description: User details for creation
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'A new user has been created with ID: {id}'
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new user
      tags:
      - user-minibank
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Fetch the user details using the provided user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user details
          schema:
            $ref: '#/definitions/mapper.User'
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve user details based on the provided ID.
      tags:
      - user-minibank
    put:
      consumes:
      - application/json
      description: Update the user details using the provided user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Update Payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user details
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Update user details based on the provided ID.
      tags:
      - user-minibank
  /users/{userid}/accounts:
    get:
      consumes:
      - application/json
      description: Fetch the list of accounts using the provided User ID.
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved account details
          schema:
            items:
              $ref: '#/definitions/mapper.Account'
            type: array
        "404":
          description: Accounts not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve list of accounts based on the provided User ID.
      tags:
      - account-minibank
    post:
      consumes:
      - application/json
      description: Create a new account using the provided details
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      - description: Account details for creation
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/account.AccountCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'A new account has been created with number: {string}'
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create a new account
      tags:
      - account-minibank
  /users/{userid}/accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the account using the provided account ID.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted account
          schema:
            type: string
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete account based on the provided ID.
      tags:
      - account-minibank
    get:
      consumes:
      - application/json
      description: Fetch the account details using the provided account ID.
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved account details
          schema:
            $ref: '#/definitions/mapper.Account'
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Retrieve account details based on the provided ID.
      tags:
      - account-minibank
    put:
      consumes:
      - application/json
      description: Update the account details using the provided user ID.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      - description: Account Update Payload
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.AccountUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated account details
          schema:
            type: string
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Update account details based on the provided ID.
      tags:
      - account-minibank
  /users/{userid}/accounts/{id}/topup:
    put:
      consumes:
      - application/json
      description: TopUp the account balance using the provided user ID and amount.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      - description: TopUp Account Payload
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.ChangeBalanceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully toped up account details
          schema:
            type: string
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: TopUp account balance based on the provided ID.
      tags:
      - account-minibank
  /users/{userid}/accounts/{id}/withdraw:
    put:
      consumes:
      - application/json
      description: Withdraw money using the provided user ID and amount.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      - description: Withdraw Account Payload
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.ChangeBalanceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully Withdrawed account
          schema:
            type: string
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Withdraw money based on the provided ID.
      tags:
      - account-minibank
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"

{
    "swagger": "2.0",
    "info": {
        "description": "minibank.",
        "title": "minibank",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost",
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the server's health status.",
                "tags": [
                    "server"
                ],
                "summary": "Check the health status of the server",
                "responses": {
                    "200": {
                        "description": "Service is healthy - Hello from Health Check Handler Endpoint\" \"StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "StatusInternalError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get User ID with credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User ID with credentials.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved User ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user unsing the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User details for creation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new user has been created with ID: {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the user details using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Retrieve user details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user details",
                        "schema": {
                            "$ref": "#/definitions/mapper.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update the user details using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete the user using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}/accounts": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the list of accounts using the provided User ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Retrieve list of accounts based on the provided User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mapper.Account"
                            }
                        }
                    },
                    "404": {
                        "description": "Accounts not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new account using the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account details for creation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new account has been created with number: {string}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the account details using the provided account ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Retrieve account details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account details",
                        "schema": {
                            "$ref": "#/definitions/mapper.Account"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update the account details using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Update account details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account Update Payload",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated account details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete the account using the provided account ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Delete account based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted account",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts/{id}/topup": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "TopUp the account balance using the provided user ID and amount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "TopUp account balance based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TopUp Account Payload",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.ChangeBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully toped up account details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts/{id}/withdraw": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Withdraw money using the provided user ID and amount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Withdraw money based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Withdraw Account Payload",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.ChangeBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Withdrawed account",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.AccountCreateRequest": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "810"
                },
                "name": {
                    "type": "string",
                    "example": "Удачный"
                }
            }
        },
        "account.AccountUpdateRequest": {
            "type": "object",
            "properties": {
                "interest_rate": {
                    "type": "number",
                    "example": 0.125
                },
                "name": {
                    "type": "string",
                    "example": "Удачный"
                }
            }
        },
        "account.ChangeBalanceRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 9999.99
                }
            }
        },
        "mapper.Account": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "example": "40817810902007654321"
                },
                "amount": {
                    "type": "number",
                    "example": 99999.99
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-09-19T10:58:00.000Z"
                },
                "currency": {
                    "type": "string",
                    "example": "810"
                },
                "id": {
                    "type": "string",
                    "example": "fdee7aae-f79f-4653-8a16-9207e6805b93"
                },
                "interest_rate": {
                    "type": "number",
                    "example": 0.125
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Удачный"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-09-19T10:58:00.000Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "fdee7aae-f79f-4653-8a16-9207e6805b93"
                }
            }
        },
        "mapper.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-09-19T10:58:00.000Z"
                },
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "fdee7aae-f79f-4653-8a16-9207e6805b93"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "last_name": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanych"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-09-19T10:58:00.000Z"
                },
                "username": {
                    "type": "string",
                    "example": "Ivanych"
                }
            }
        },
        "user.UserCreateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "lastName": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "password": {
                    "type": "string",
                    "example": "mypass"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanych"
                },
                "username": {
                    "type": "string",
                    "example": "Ivanec"
                }
            }
        },
        "user.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "lastName": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanych"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}
// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account-minibank-health": {
            "get": {
                "description": "Returns the server's health status.",
                "tags": [
                    "account-minibank"
                ],
                "summary": "Check the health status of the server",
                "responses": {
                    "200": {
                        "description": "Service is healthy - Hello from Health Check Handler Endpoint\" \"StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "StatusInternalError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "description": "Create a new authentication record using the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-minibank"
                ],
                "summary": "Create a new authentication record (inter-service interaction)",
                "parameters": [
                    {
                        "description": "Authentication details for creation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend_services_auth_internal_http_handler_v1_auth.AuthCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new authentication record has been created with ID: {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth-minibank-health": {
            "get": {
                "description": "Returns the server's health status.",
                "tags": [
                    "auth-minibank"
                ],
                "summary": "Check the health status of the auth server",
                "responses": {
                    "200": {
                        "description": "Service is healthy - Hello from Health Check Handler Endpoint\" \"StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "StatusInternalError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get User ID with credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-minibank"
                ],
                "summary": "Authenticate User with credentials.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved User ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Authorize User with token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-minibank"
                ],
                "summary": "Authorize User with token.",
                "responses": {
                    "200": {
                        "description": "Authorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/{id}": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Deactivate the authentication record using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-minibank"
                ],
                "summary": "Deactivate authentication record based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted authentication record",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete the authentication record using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-minibank"
                ],
                "summary": "Delete authentication record based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted authentication record",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mgmt": {
            "post": {
                "description": "Create a new user using the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mgmt"
                ],
                "summary": "Orchestrate creation of a new user with services auth and user",
                "parameters": [
                    {
                        "description": "User details for creation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mgmt.MgmtCreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new user has been created with ID: {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mgmt-minibank-health": {
            "get": {
                "description": "Returns the server's health status.",
                "tags": [
                    "mgmt"
                ],
                "summary": "Check the health status of the server",
                "responses": {
                    "200": {
                        "description": "Mgmt Service is healthy - Hello from Health Check Handler Endpoint\" \"StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "StatusInternalError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mgmt/{id}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete(deactivate) a  user using the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mgmt"
                ],
                "summary": "Orchestrate deactivation of a  user with services auth, user and account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user has been deactivated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uproxy": {
            "get": {
                "description": "Unleash Proxy for Web",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uProxy"
                ],
                "summary": "Unleash Proxy for Web",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved feature toggles",
                        "schema": {
                            "$ref": "#/definitions/mapper.ToggleList"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uproxy-minibank-health": {
            "get": {
                "description": "Returns the server's health status.",
                "tags": [
                    "uProxy"
                ],
                "summary": "Check the health status of the server",
                "responses": {
                    "200": {
                        "description": "Unleash Proxy Service is healthy - Hello from Health Check Handler Endpoint\" \"StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "StatusInternalError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user-minibank-health": {
            "get": {
                "description": "Returns the server's health status.",
                "tags": [
                    "user-minibank"
                ],
                "summary": "Check the health status of the server",
                "responses": {
                    "200": {
                        "description": "User Service is healthy - Hello from Health Check Handler Endpoint\" \"StatusOK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "StatusInternalError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a new user using the provided details (inter-service interaction)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-minibank"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User details for creation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new user has been created with ID: {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the user details using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-minibank"
                ],
                "summary": "Retrieve user details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user details",
                        "schema": {
                            "$ref": "#/definitions/mapper.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update the user details using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-minibank"
                ],
                "summary": "Update user details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update Payload",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the list of accounts using the provided User ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "Retrieve list of accounts based on the provided User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mapper.Account"
                            }
                        }
                    },
                    "404": {
                        "description": "Accounts not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new account using the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account details for creation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new account has been created with number: {string}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetch the account details using the provided account ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "Retrieve account details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account details",
                        "schema": {
                            "$ref": "#/definitions/mapper.Account"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update the account details using the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "Update account details based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account Update Payload",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated account details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete the account using the provided account ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "Delete account based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted account",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts/{id}/topup": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "TopUp the account balance using the provided user ID and amount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "TopUp account balance based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TopUp Account Payload",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.ChangeBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully toped up account details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userid}/accounts/{id}/withdraw": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Withdraw money using the provided user ID and amount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-minibank"
                ],
                "summary": "Withdraw money based on the provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Withdraw Account Payload",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.ChangeBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Withdrawed account",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.AccountCreateRequest": {
            "type": "object",
            "required": [
                "currency",
                "name"
            ],
            "properties": {
                "currency": {
                    "type": "string",
                    "enum": [
                        "810",
                        "840"
                    ],
                    "example": "810"
                },
                "name": {
                    "type": "string",
                    "example": "Удачный"
                }
            }
        },
        "account.AccountUpdateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "interest_rate": {
                    "type": "number",
                    "example": 0.125
                },
                "name": {
                    "type": "string",
                    "example": "Удачный"
                }
            }
        },
        "account.ChangeBalanceRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 9999.99
                }
            }
        },
        "backend_services_auth_internal_http_handler_v1_auth.AuthCreateRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "mypass"
                },
                "username": {
                    "type": "string",
                    "example": "Ivanec"
                }
            }
        },
        "mapper.Account": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "example": "40817810902007654321"
                },
                "amount": {
                    "type": "number",
                    "example": 99999.99
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-09-19T10:58:00.000Z"
                },
                "currency": {
                    "type": "string",
                    "example": "810"
                },
                "id": {
                    "type": "string",
                    "example": "fdee7aae-f79f-4653-8a16-9207e6805b93"
                },
                "interest_rate": {
                    "type": "number",
                    "example": 0.125
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Удачный"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-09-19T10:58:00.000Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "fdee7aae-f79f-4653-8a16-9207e6805b93"
                }
            }
        },
        "mapper.ToggleList": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "example": "Create User Toggle"
                            },
                            "environments": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "development"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string",
                                "example": "CreateUserToggle"
                            }
                        }
                    }
                },
                "version": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "mapper.User": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "01.01.1999"
                },
                "created_at": {
                    "type": "string",
                    "example": "01.01.1999"
                },
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "fdee7aae-f79f-4653-8a16-9207e6805b93"
                },
                "last_name": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanych"
                },
                "phone": {
                    "type": "string",
                    "example": "+7(495)999-99-99"
                },
                "updated_at": {
                    "type": "string",
                    "example": "01.01.1999"
                }
            }
        },
        "mgmt.MgmtCreateUserRequest": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "last_name",
                "name",
                "password",
                "patronymic",
                "phone",
                "username"
            ],
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "02.01.2006"
                },
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "last_name": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "password": {
                    "type": "string",
                    "example": "mypass"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanych"
                },
                "phone": {
                    "type": "string",
                    "example": "+7(495)999-99-99"
                },
                "username": {
                    "type": "string",
                    "example": "Ivanec"
                }
            }
        },
        "user.UserCreateRequest": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "id",
                "last_name",
                "name",
                "patronymic",
                "phone"
            ],
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "02.01.2006"
                },
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "last_name": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanych"
                },
                "phone": {
                    "type": "string",
                    "example": "+7(495)999-99-99"
                }
            }
        },
        "user.UserUpdateRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "Ivanych@gmail.com"
                },
                "phone": {
                    "type": "string",
                    "example": "+7(495)999-99-99"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "minibank",
	Description:      "minibank.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
